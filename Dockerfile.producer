# Use the official Go image as the base image
FROM golang:1.22-alpine as builder

# Set the working directory inside the container
WORKDIR /app

# Copy go.mod and go.sum files first to leverage Docker layer caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the rest of the application code
COPY . .

# Accept the VERSION argument passed from docker-compose.yml
ARG VERSION=dev # Fallback to 'dev' if not provided

# Build the Producer binary and inject the version via ldflags
RUN go build -ldflags="-X main.version=${VERSION}" -o producer-binary ./producer/main.go

# Use a minimal base image to run the built binary
FROM alpine:latest

# Set up working directory inside the new base image
WORKDIR /root/

# Copy the binary from the builder stage
COPY --from=builder /app/producer-binary .

# Copy the updated producer config from the configs folder
COPY --from=builder /app/configs/producer.docker.config.yaml ./configs/

# Expose Prometheus metrics and pprof ports
EXPOSE 2112 6060

# Command to run the binary
CMD ["./producer-binary"]